### YamlMime:UniversalReference
items:
  - uid: azure-iot-amqp-base.Amqp
    name: Amqp
    fullName: Amqp
    children:
      - azure-iot-amqp-base.Amqp.constructor
      - azure-iot-amqp-base.Amqp.attachReceiverLink
      - azure-iot-amqp-base.Amqp.attachSenderLink
      - azure-iot-amqp-base.Amqp.connect
      - azure-iot-amqp-base.Amqp.detachReceiverLink
      - azure-iot-amqp-base.Amqp.detachSenderLink
      - azure-iot-amqp-base.Amqp.disconnect
      - azure-iot-amqp-base.Amqp.getReceiver
      - azure-iot-amqp-base.Amqp.initializeCBS
      - azure-iot-amqp-base.Amqp.putToken
      - azure-iot-amqp-base.Amqp.send
      - azure-iot-amqp-base.Amqp.setDisconnectHandler
    langs:
      - typeScript
    type: class
    summary: |-
      Basic AMQP functionality used by higher-level IoT Hub libraries.
                 Usually you'll want to avoid using this class and instead rely on higher-level implementations
                 of the AMQP transport (see [azure-iot-device-amqp.Amqp](xref:azure-iot-device-amqp.Amqp) for example).
    package: azure-iot-amqp-base
  - uid: azure-iot-amqp-base.Amqp.constructor
    name: 'Amqp(autoSettleMessages: boolean, sdkVersionString: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: autoSettleMessages
          type:
            - boolean
          description: ''
        - id: sdkVersionString
          type:
            - string
          description: ''
      content: 'new Amqp(autoSettleMessages: boolean, sdkVersionString: string)'
    type: constructor
  - uid: azure-iot-amqp-base.Amqp.attachReceiverLink
    name: >-
      attachReceiverLink(endpoint: string, linkOptions: any, done:
      GenericAmqpBaseCallback)
    children: []
    langs:
      - typeScript
    summary: Creates and attaches an AMQP receiver link for the specified endpoint.
    syntax:
      parameters:
        - id: endpoint
          type:
            - string
          description: Endpoint used for the receiver link.
        - id: linkOptions
          type:
            - any
          description: >-
            Configuration options to be merged with the AMQP10 policies for the
            link..
        - id: done
          type:
            - GenericAmqpBaseCallback
          description: |
            Callback used to return the link object or an Error.
      content: >-
        function attachReceiverLink(endpoint: string, linkOptions: any, done:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.attachSenderLink
    name: >-
      attachSenderLink(endpoint: string, linkOptions: any, done:
      GenericAmqpBaseCallback)
    children: []
    langs:
      - typeScript
    summary: Creates and attaches an AMQP sender link for the specified endpoint.
    syntax:
      parameters:
        - id: endpoint
          type:
            - string
          description: Endpoint used for the sender link.
        - id: linkOptions
          type:
            - any
          description: >-
            Configuration options to be merged with the AMQP10 policies for the
            link..
        - id: done
          type:
            - GenericAmqpBaseCallback
          description: |
            Callback used to return the link object or an Error.
      content: >-
        function attachSenderLink(endpoint: string, linkOptions: any, done:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.connect
    name: 'connect(uri: string, sslOptions: any, done: GenericAmqpBaseCallback)'
    children: []
    langs:
      - typeScript
    summary: Establishes a connection with the IoT Hub instance.
    syntax:
      parameters:
        - id: uri
          type:
            - string
          description: The uri to connect with.
        - id: sslOptions
          type:
            - any
          description: SSL certificate options.
        - id: done
          type:
            - GenericAmqpBaseCallback
          description: >
            Callback called when the connection is established or if an error
            happened.
      content: >-
        function connect(uri: string, sslOptions: any, done:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.detachReceiverLink
    name: >-
      detachReceiverLink(endpoint: string, detachCallback:
      GenericAmqpBaseCallback)
    children: []
    langs:
      - typeScript
    summary: Detaches an AMQP receiver link for the specified endpoint if it exists.
    syntax:
      parameters:
        - id: endpoint
          type:
            - string
          description: Endpoint used to identify which link should be detached.
        - id: detachCallback
          type:
            - GenericAmqpBaseCallback
          description: ''
      content: >-
        function detachReceiverLink(endpoint: string, detachCallback:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.detachSenderLink
    name: >-
      detachSenderLink(endpoint: string, detachCallback:
      GenericAmqpBaseCallback)
    children: []
    langs:
      - typeScript
    summary: Detaches an AMQP sender link for the specified endpoint if it exists.
    syntax:
      parameters:
        - id: endpoint
          type:
            - string
          description: Endpoint used to identify which link should be detached.
        - id: detachCallback
          type:
            - GenericAmqpBaseCallback
          description: ''
      content: >-
        function detachSenderLink(endpoint: string, detachCallback:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.disconnect
    name: 'disconnect(done: GenericAmqpBaseCallback)'
    children: []
    langs:
      - typeScript
    summary: Disconnects the link to the IoT Hub instance.
    syntax:
      parameters:
        - id: done
          type:
            - GenericAmqpBaseCallback
          description: |
            Called when disconnected of if an error happened.
      content: 'function disconnect(done: GenericAmqpBaseCallback)'
    type: method
  - uid: azure-iot-amqp-base.Amqp.getReceiver
    name: 'getReceiver(endpoint: string, done: GenericAmqpBaseCallback)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets the <code><xref:AmqpReceiver></code> object that can be used to
      receive messages from the IoT Hub instance and accept/reject/release them.
    syntax:
      parameters:
        - id: endpoint
          type:
            - string
          description: Endpoint used for the receiving link.
        - id: done
          type:
            - GenericAmqpBaseCallback
          description: |
            Callback used to return the <code><xref:AmqpReceiver></code> object.
      content: 'function getReceiver(endpoint: string, done: GenericAmqpBaseCallback)'
    type: method
  - uid: azure-iot-amqp-base.Amqp.initializeCBS
    name: 'initializeCBS(initializeCBSCallback: GenericAmqpBaseCallback)'
    children: []
    langs:
      - typeScript
    summary: 'If CBS authentication is to be used, set it up.'
    syntax:
      parameters:
        - id: initializeCBSCallback
          type:
            - GenericAmqpBaseCallback
          description: |
            Called when the initialization terminates.
      content: 'function initializeCBS(initializeCBSCallback: GenericAmqpBaseCallback)'
    type: method
  - uid: azure-iot-amqp-base.Amqp.putToken
    name: >-
      putToken(audience: string, token: string, putTokenCallback:
      GenericAmqpBaseCallback)
    children: []
    langs:
      - typeScript
    summary: >-
      Sends a put token operation to the IoT Hub to provide authentication for a
      device.
    syntax:
      parameters:
        - id: audience
          type:
            - string
          description: >-
            The path that describes what is being authenticated.  An example
            would be
                                                  hub.azure-devices.net%2Fdevices%2Fmydevice
        - id: token
          type:
            - string
          description: >-
            The actual sas token being used to authenticate the device.  For the
            most
                                                  part the audience is likely to be the sr field of the token.
        - id: putTokenCallback
          type:
            - GenericAmqpBaseCallback
          description: |
            Called when the put token operation terminates.
      content: >-
        function putToken(audience: string, token: string, putTokenCallback:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.send
    name: >-
      send(message: Message, endpoint: string, to: string, done:
      GenericAmqpBaseCallback)
    children: []
    langs:
      - typeScript
    summary: Sends a message to the IoT Hub instance.
    syntax:
      parameters:
        - id: message
          type:
            - Message
          description: The message to send.
        - id: endpoint
          type:
            - string
          description: The endpoint to use when sending the message.
        - id: to
          type:
            - string
          description: The destination of the message.
        - id: done
          type:
            - GenericAmqpBaseCallback
          description: |
            Called when the message is sent or if an error happened.
      content: >-
        function send(message: Message, endpoint: string, to: string, done:
        GenericAmqpBaseCallback)
    type: method
  - uid: azure-iot-amqp-base.Amqp.setDisconnectHandler
    name: 'setDisconnectHandler(disconnectCallback: GenericAmqpBaseCallback)'
    children: []
    langs:
      - typeScript
    summary: Sets the callback that should be called in case of disconnection.
    syntax:
      parameters:
        - id: disconnectCallback
          type:
            - GenericAmqpBaseCallback
          description: |
            Called when the connection disconnected.
      content: >-
        function setDisconnectHandler(disconnectCallback:
        GenericAmqpBaseCallback)
    type: method
