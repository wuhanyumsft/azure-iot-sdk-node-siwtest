- uid: azure-iot-device.BlobSasError
  name: BlobSasError
  items:
    - uid: azure-iot-device.BlobSasError.constructor
      name: 'BlobSasError(message: string)'
- uid: azure-iot-device.BlobUploadNotificationError
  name: BlobUploadNotificationError
  items:
    - uid: azure-iot-device.BlobUploadNotificationError.constructor
      name: 'BlobUploadNotificationError(message: string)'
- uid: azure-iot-device.BlobUploadResult
  name: BlobUploadResult
  items:
    - uid: azure-iot-device.BlobUploadResult.constructor
      name: >-
        BlobUploadResult(isSuccess: boolean, statusCode: number,
        statusDescription: string)
    - uid: azure-iot-device.BlobUploadResult.fromAzureStorageCallbackArgs
      name: >-
        fromAzureStorageCallbackArgs(err?: Error, body?: any, response?:
        function)
- uid: azure-iot-device.FileUploadApi
  name: FileUploadApi
  items:
    - uid: azure-iot-device.FileUploadApi.constructor
      name: 'FileUploadApi(deviceId: string, hostname: string, httpTransport?: any)'
- uid: azure-iot-device.Client
  name: Client
  items:
    - uid: azure-iot-device.Client.constructor
      name: >-
        Client(transport: Transport, connStr?: string, blobUploadClient?:
        BlobUploadClient)
    - uid: azure-iot-device.Client.abandon
      name: 'abandon(message: Message, abandonCallback: function)'
    - uid: azure-iot-device.Client.close
      name: 'close(closeCallback?: function)'
    - uid: azure-iot-device.Client.complete
      name: 'complete(message: Message, completeCallback: function)'
    - uid: azure-iot-device.Client.getTwin
      name: 'getTwin(done: function, twin?: Twin)'
    - uid: azure-iot-device.Client.onDeviceMethod
      name: 'onDeviceMethod(methodName: string, callback: function)'
    - uid: azure-iot-device.Client.open
      name: 'open(openCallback: function)'
    - uid: azure-iot-device.Client.reject
      name: 'reject(message: Message, rejectCallback: function)'
    - uid: azure-iot-device.Client.sendEvent
      name: 'sendEvent(message: Message, sendEventCallback?: function)'
    - uid: azure-iot-device.Client.sendEventBatch
      name: 'sendEventBatch(messages: function, sendEventBatchCallback?: function)'
    - uid: azure-iot-device.Client.setOptions
      name: 'setOptions(options: any, done?: function)'
    - uid: azure-iot-device.Client.setTransportOptions
      name: 'setTransportOptions(options: any, done?: function)'
    - uid: azure-iot-device.Client.updateSharedAccessSignature
      name: >-
        updateSharedAccessSignature(sharedAccessSignature: string,
        updateSasCallback?: function)
    - uid: azure-iot-device.Client.uploadToBlob
      name: >-
        uploadToBlob(blobName: string, stream: Stream, streamLength: number,
        done: function)
    - uid: azure-iot-device.Client.fromConnectionString
      name: 'fromConnectionString(connStr: string, transportCtor: any)'
    - uid: azure-iot-device.Client.fromSharedAccessSignature
      name: >-
        fromSharedAccessSignature(sharedAccessSignature: string, transportCtor:
        any)
- uid: azure-iot-device.DeviceMethodRequest
  name: DeviceMethodRequest
  items:
    - uid: azure-iot-device.DeviceMethodRequest.constructor
      name: 'DeviceMethodRequest(requestId: string, methodName: string, body?: any)'
- uid: azure-iot-device.DeviceMethodResponse
  name: DeviceMethodResponse
  items:
    - uid: azure-iot-device.DeviceMethodResponse.constructor
      name: 'DeviceMethodResponse(requestId: string, transport: Transport)'
    - uid: azure-iot-device.DeviceMethodResponse.send
      name: 'send(status: number, payload?: any, done?: function)'
