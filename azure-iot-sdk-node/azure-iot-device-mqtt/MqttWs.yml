### YamlMime:UniversalReference
items:
  - uid: azure-iot-device-mqtt.MqttWs
    name: MqttWs
    fullName: MqttWs
    children:
      - azure-iot-device-mqtt.MqttWs.abandon
      - azure-iot-device-mqtt.MqttWs.complete
      - azure-iot-device-mqtt.MqttWs.connect
      - azure-iot-device-mqtt.MqttWs.defaultMaxListeners
      - azure-iot-device-mqtt.MqttWs.disconnect
      - azure-iot-device-mqtt.MqttWs.getReceiver
      - azure-iot-device-mqtt.MqttWs.getTwinReceiver
      - azure-iot-device-mqtt.MqttWs.constructor
      - azure-iot-device-mqtt.MqttWs.reject
      - azure-iot-device-mqtt.MqttWs.sendEvent
      - azure-iot-device-mqtt.MqttWs.sendMethodResponse
      - azure-iot-device-mqtt.MqttWs.sendTwinRequest
      - azure-iot-device-mqtt.MqttWs.setOptions
      - azure-iot-device-mqtt.MqttWs.updateSharedAccessSignature
      - azure-iot-device-mqtt.MqttWs._config
    langs:
      - typeScript
    type: class
    summary: >-
      Provides MQTT over WebSockets transport for the device
      [client](xref:azure-iot-device.Client) class.
    package: azure-iot-device-mqtt
  - uid: azure-iot-device-mqtt.MqttWs.abandon
    name: abandon()
    children: []
    langs:
      - typeScript
    summary: >-
      Settles the message as abandoned and calls the done callback with the
      result.
    syntax:
      parameters: []
      content: function abandon()
    exceptions:
      - type: Error
        description: The MQTT transport does not support abandoning messages.
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.complete
    name: 'complete(message: Message, done?: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Settles the message as complete and calls the done callback with the
      result.
    syntax:
      parameters:
        - id: message
          type:
            - Message
          description: The message to settle as complete.
        - id: done
          type:
            - function
          description: |
            The callback that shall be called with the error or result object.
          optional: true
      content: 'function complete(message: Message, done?: function)'
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.connect
    name: 'connect(done?: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Establishes the connection to the Azure IoT Hub instance using the MQTT
      protocol.
    syntax:
      parameters:
        - id: done
          type:
            - function
          description: |
            callback that shall be called when the connection is established.
          optional: true
      content: 'function connect(done?: function)'
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: azure-iot-device-mqtt.MqttWs.disconnect
    name: 'disconnect(done?: function)'
    children: []
    langs:
      - typeScript
    summary: Terminates the connection to the IoT Hub instance.
    syntax:
      parameters:
        - id: done
          type:
            - function
          description: |
            Callback that shall be called when the connection is terminated.
          optional: true
      content: 'function disconnect(done?: function)'
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.getReceiver
    name: 'getReceiver(done?: function)'
    children: []
    langs:
      - typeScript
    summary: Gets a receiver object that is used to receive and settle messages.
    syntax:
      parameters:
        - id: done
          type:
            - function
          description: |
            callback that shall be called with a receiver object instance.
          optional: true
      content: 'function getReceiver(done?: function)'
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.getTwinReceiver
    name: 'getTwinReceiver(done?: function)'
    children: []
    langs:
      - typeScript
    summary: Get a receiver object that handles C2D device-twin traffic
    syntax:
      parameters:
        - id: done
          type:
            - function
          description: |
            the callback to be invoked when this function completes.
          optional: true
      content: 'function getTwinReceiver(done?: function)'
    exceptions:
      - type: ReferenceError
        description: One of the required parameters is falsy
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.constructor
    name: 'MqttWs(config: ClientConfig)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: config
          type:
            - ClientConfig
          description: ''
      content: 'new MqttWs(config: ClientConfig)'
    type: constructor
  - uid: azure-iot-device-mqtt.MqttWs.reject
    name: reject()
    children: []
    langs:
      - typeScript
    summary: >-
      Settles the message as rejected and calls the done callback with the
      result.
    syntax:
      parameters: []
      content: function reject()
    exceptions:
      - type: Error
        description: The MQTT transport does not support rejecting messages.
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.sendEvent
    name: 'sendEvent(message: Message, done?: function)'
    children: []
    langs:
      - typeScript
    summary: Sends an event to the server.
    syntax:
      parameters:
        - id: message
          type:
            - Message
          description: |
            Message used for the content of the event sent to the server.
        - id: done
          type:
            - function
          description: ''
          optional: true
      content: 'function sendEvent(message: Message, done?: function)'
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.sendMethodResponse
    name: 'sendMethodResponse(response: DeviceMethodResponse, done?: function)'
    children: []
    langs:
      - typeScript
    summary: Sends the response for a device method call to the service.
    syntax:
      parameters:
        - id: response
          type:
            - DeviceMethodResponse
          description: |-
            This is the `response` object that was
                                           produced by the device client object when a
                                           C2D device method call was received.
        - id: done
          type:
            - function
          description: |
            The callback to be invoked when the response
                                           has been sent to the service.
          optional: true
      content: >-
        function sendMethodResponse(response: DeviceMethodResponse, done?:
        function)
    exceptions:
      - type: Error
        description: If the `response` parameter is falsy or does
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.sendTwinRequest
    name: >-
      sendTwinRequest(method: string, resource: string, properties: [key:
      string]: string, body: any, done?: function)
    children: []
    langs:
      - typeScript
    summary: Send a device-twin specific messager to the IoT Hub instance
    syntax:
      parameters:
        - id: method
          type:
            - string
          description: 'name of the method to invoke (''PUSH'', ''PATCH'', etc)'
        - id: resource
          type:
            - string
          description: >-
            name of the resource to act on (e.g. '/properties/reported/') with
            beginning and ending slashes
        - id: properties
          type:
            - '[key: string]: string'
          description: >-
            object containing name value pairs for request properties (e.g. {
            'rid' : 10, 'index' : 17 })
        - id: body
          type:
            - any
          description: body of request
        - id: done
          type:
            - function
          description: |
            the callback to be invoked when this function completes.
          optional: true
      content: >-
        function sendTwinRequest(method: string, resource: string, properties:
        [key: string]: string, body: any, done?: function)
    exceptions:
      - type: ReferenceError
        description: One of the required parameters is falsy
      - type: ArgumentError
        description: One of the parameters is an incorrect type
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.setOptions
    name: 'setOptions(options: X509, done?: function)'
    children: []
    langs:
      - typeScript
    summary: This methods sets the MQTT specific options of the transport.
    syntax:
      parameters:
        - id: options
          type:
            - X509
          description: >-
            Options to set.  Currently for MQTT these are the x509 cert, key,
            and optional passphrase properties. (All strings)
        - id: done
          type:
            - function
          description: |
            The callback to be invoked when `setOptions` completes.
          optional: true
      content: 'function setOptions(options: X509, done?: function)'
    type: method
  - uid: azure-iot-device-mqtt.MqttWs.updateSharedAccessSignature
    name: >-
      updateSharedAccessSignature(sharedAccessSignature: string, done?:
      function)
    children: []
    langs:
      - typeScript
    summary: >-
      This methods sets the SAS token used to authenticate with the IoT Hub
      service.
    syntax:
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: The new SAS token.
        - id: done
          type:
            - function
          description: >
            The callback to be invoked when `updateSharedAccessSignature`
            completes.
          optional: true
      content: >-
        function updateSharedAccessSignature(sharedAccessSignature: string,
        done?: function)
    type: method
  - uid: azure-iot-device-mqtt.MqttWs._config
    name: _config
    fullName: _config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - ClientConfig
